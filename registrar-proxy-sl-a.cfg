#
# $Id$
#
# this example shows use of ser as a registrar server
#

# ------------------ module loading ----------------------------------

debug=2            # debug level
fork=yes
log_stderror=yes
listen=127.0.0.1:5060

#set module path
mpath="/usr/lib/x86_64-linux-gnu/kamailio/modules/"


loadmodule "sl.so"
loadmodule "pv.so"
loadmodule "tm.so"
loadmodule "usrloc.so"
loadmodule "registrar.so"
loadmodule "xlog.so"
loadmodule "textops.so"
modparam("xlog", "buf_size", 8192)

# -------------------------  request routing logic -------------------
# main routing logic

request_route{
	xlog("L_INFO", "Received request ($rm) from ($fu) and R-URI ($ru)\n");

	if (t_check_trans()) {
		xlog("L_INFO", "route - An existing transaction\n");
	}    

	if (method == "REGISTER") {
		xlog("L_INFO", "REGISTER with AoR ($tu) and Contact ($ct)\n");
		save("location");
		exit;	
	}

	if (method == "INVITE") {
		xlog("L_INFO", "INVITE from ($fu) to ($tu)\n");
	    if ($tu =~ ".+@a.pt") {   # belongs to local domain
			if (!lookup("location")) {
		     	sl_send_reply("404", "Not Found"); # entry not found in registrar                    
        	} else {
				xlog("L_INFO", "Lookup - changed R-URI to ($ru)\n");
				forward();
			}
        } else {
			forward();
		}
	}

	if (is_method("ACK")) {
		xlog("L_INFO", "ACK from ($fu)\n");
        lookup("location");
		forward();	
	}

	if (is_method("CANCEL")) {
		xlog("L_INFO", "CANCEL from ($fu)\n");
		lookup("location");
		forward();
	}

	if (is_method("BYE")) {	
		xlog("L_INFO", "BYE from ($fu)\n");
		forward(); 
	}
}

onreply_route{
	if (t_check_trans()) {
		xlog("L_INFO", "reply - An existing transaction\n");
	}    
	xlog("L_INFO", "($rs) Reply to request from ($fu)\n");
}